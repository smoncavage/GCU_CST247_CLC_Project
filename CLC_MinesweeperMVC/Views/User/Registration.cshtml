@using CLC_MinesweeperMVC.Models
@model User

@{
    ViewBag.Title="Registration";
}

<h2>Registration</h2>
@if(ViewBag.Status!=null&&Convert.ToBoolean(ViewBag.Status)) {
    if(ViewBag.Message!=null) {
        <div class="alert alert-success">
            <strong>Success!</strong>@ViewBag.Message
        </div>
    }
}
else {
    using(Html.BeginForm("User", "Registration", FormMethod.Post)) {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <span>First Name:</span><!--@Html.LabelFor(model => model.FIRSTNAME, htmlAttributes: new { @class = "control-label col-md-2" })-->
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.FIRSTNAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FIRSTNAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>Last Name:</span><!--@Html.LabelFor(model => model.LASTNAME, htmlAttributes: new { @class = "control-label col-md-2" })-->
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LASTNAME, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LASTNAME, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>Gender:</span>
                @{
                    List<SelectListItem> genderList = new List<SelectListItem>();
                    genderList.Add(new SelectListItem {
                        Text="Male",
                        Value="Male"
                    });
                    genderList.Add(new SelectListItem {
                        Text="Female",
                        Value="Female"
                    });
                    genderList.Add(new SelectListItem {
                        Text="Non-Binary",
                        Value="Non-Binary"
                    });
                }
                @Html.DropDownListFor(model => model.GENDER, genderList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <span>Date of Birth:</span>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>Street Address:</span>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <span>State:</span>
                @{
                    List<SelectListItem> stateList = new List<SelectListItem>();
                    stateList.Add(new SelectListItem {
                        Text="Armed Forces Americas",
                        Value="AA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Armed Forces Pacific",
                        Value="AP"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Armed Forces Europe",
                        Value="AE"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Alabama",
                        Value="AL"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Alaska",
                        Value="AK"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Arizona",
                        Value="AR"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Arkansas",
                        Value="AR"
                    });
                    stateList.Add(new SelectListItem {
                        Text="California",
                        Value="CA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Colorado",
                        Value="CO"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Connecticut",
                        Value="CT"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Delaware",
                        Value="DE"
                    });
                    stateList.Add(new SelectListItem {
                        Text="District of Columbia",
                        Value="DC"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Florida",
                        Value="FL"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Georgia",
                        Value="GA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Hawaii",
                        Value="HI"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Idaho",
                        Value="ID"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Illinois",
                        Value="AL"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Indiana",
                        Value="IN"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Iowa",
                        Value="IA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Kansas",
                        Value="KS"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Kentucky",
                        Value="KY"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Louisiana",
                        Value="LA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Maine",
                        Value="ME"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Maryland",
                        Value="MD"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Massachusettes",
                        Value="MA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Michigan",
                        Value="MI"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Minnesota",
                        Value="MN"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Mississippi",
                        Value="MS"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Missouri",
                        Value="MO"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Montana",
                        Value="MT"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Nebraska",
                        Value="NE"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Nevada",
                        Value="NV"
                    });
                    stateList.Add(new SelectListItem {
                        Text="New Hampshire",
                        Value="NH"
                    });
                    stateList.Add(new SelectListItem {
                        Text="New Jersey",
                        Value="NJ"
                    });
                    stateList.Add(new SelectListItem {
                        Text="New Mexico",
                        Value="NM"
                    });
                    stateList.Add(new SelectListItem {
                        Text="New York",
                        Value="NY"
                    });
                    stateList.Add(new SelectListItem {
                        Text="North Carolina",
                        Value="NC"
                    });
                    stateList.Add(new SelectListItem {
                        Text="North Dakota",
                        Value="ND"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Ohio",
                        Value="OH"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Oklahoma",
                        Value="OK"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Oregon",
                        Value="OR"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Pennsylvania",
                        Value="PA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Rhode Island",
                        Value="RI"
                    });
                    stateList.Add(new SelectListItem {
                        Text="South Carolina",
                        Value="SC"
                    });
                    stateList.Add(new SelectListItem {
                        Text="South Dakota",
                        Value="SD"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Tennessee",
                        Value="TN"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Texas",
                        Value="TX"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Utah",
                        Value="AT"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Vermont",
                        Value="VT"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Virginia",
                        Value="VA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Washington",
                        Value="WA"
                    });
                    stateList.Add(new SelectListItem {
                        Text="West Virginia",
                        Value="WV"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Wisconsin",
                        Value="WI"
                    });
                    stateList.Add(new SelectListItem {
                        Text="Wyoming",
                        Value="WY"
                    });
                }
                        @Html.DropDownListFor(model => model.STATE, stateList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.STATE, "", new { @class = "text-danger" })
                   
            </div>
                <div class="form-group">
                    <span>Zip Code:</span>
                    <!--<input id="zip" name="zip" type="text" inputmode="numeric" pattern="^(?(^00000(|-0000))|(\d{5}(|-\d{4})))$">-->
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ZIPCODE, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZIPCODE, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span>Email Address:</span><!--@Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })-->
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span>Username:</span><!--@Html.LabelFor(model => model.USERNAME, htmlAttributes: new { @class = "control-label col-md-2" })-->
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.USERNAME, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.USERNAME, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("UserExist", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span>Password:</span><!--@Html.LabelFor(model => model.PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })-->
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.PASSWORD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PASSWORD, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <span>Re-Enter Password:</span>
                    <!--@Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })-->
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" formaction="/User/Registration"/>
                        <br />
                        <input type="submit" value="Log in" class="btn btn-default" formaction="/Login/Login" />
                    </div>
                </div>
            
        </div>
        if(ViewBag.Message!=null) {
            <div class="alert alert-danger">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }
    }
}
<div>
    <!-- @Html.ActionLink("Login", "Login")-->
</div>

@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
